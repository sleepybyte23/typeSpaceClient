[{"/Users/sethx/chNotes/chat-client/src/App.js":"1","/Users/sethx/chNotes/chat-client/src/components/Chat/Chat.js":"2","/Users/sethx/chNotes/chat-client/src/components/Login/Login.js":"3","/Users/sethx/chNotes/chat-client/src/mainContext.js":"4","/Users/sethx/chNotes/chat-client/src/components/DefaultPage.js":"5","/Users/sethx/chNotes/chat-client/src/usersContext.js":"6","/Users/sethx/chNotes/chat-client/src/socketContext.js":"7","/Users/sethx/chNotes/chat-client/src/index.js":"8"},{"size":1038,"mtime":1613267374828,"results":"9","hashOfConfig":"10"},{"size":5383,"mtime":1613568486113,"results":"11","hashOfConfig":"10"},{"size":5032,"mtime":1613538854406,"results":"12","hashOfConfig":"10"},{"size":524,"mtime":1613291194960,"results":"13","hashOfConfig":"10"},{"size":483,"mtime":1613267374828,"results":"14","hashOfConfig":"10"},{"size":348,"mtime":1613267374829,"results":"15","hashOfConfig":"10"},{"size":431,"mtime":1613359423015,"results":"16","hashOfConfig":"10"},{"size":410,"mtime":1613267374829,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w0rzrx",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/sethx/chNotes/chat-client/src/App.js",[],"/Users/sethx/chNotes/chat-client/src/components/Chat/Chat.js",["36"],"/Users/sethx/chNotes/chat-client/src/components/Login/Login.js",["37","38","39","40","41"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MainContext } from \"../../mainContext\";\nimport { SocketContext } from \"../../socketContext\";\nimport {\n  Flex,\n  Heading,\n  IconButton,\n  Input,\n  Button,\n  ButtonGroup,\n} from \"@chakra-ui/react\";\nimport { RiArrowRightLine } from \"react-icons/ri\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { UsersContext } from \"../../usersContext\";\n\nconst Login = () => {\n  const socket = useContext(SocketContext);\n  const {\n    name,\n    setName,\n    room,\n    setRoom,\n    isMod,\n    setIsMod,\n    modCode,\n    setModCode,\n  } = useContext(MainContext);\n  const history = useHistory();\n  const toast = useToast();\n  const { setUsers } = useContext(UsersContext);\n\n  //Checks to see if there's a user already present\n\n  useEffect(() => {\n    socket.on(\"users\", (users) => {\n      setUsers(users);\n    });\n  });\n\n  function createRoomId(length) {\n    var result = \"\";\n    var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  //Emits the login event and if successful redirects to chat and saves user data\n  const handleClick = () => {\n    let roomId = createRoomId(1);\n    setRoom(() => roomId);\n    setIsMod(() => true);\n    console.log(modCode);\n    //alert(roomId);\n    socket.emit(\"login\", { name, roomId, modCode }, (error) => {\n      if (error) {\n        console.log(error);\n        return toast({\n          position: \"top\",\n          title: \"Error\",\n          description: error,\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n      history.push(\"/chat\");\n      // return toast({\n      //   position: \"top\",\n      //   title: \"Hey there\",\n      //   description: `Welcome to ${room}`,\n      //   status: \"success\",\n      //   duration: 5000,\n      //   isClosable: true,\n      // });\n    });\n  };\n\n  const handleClickJoin = () => {\n    //let roomId = createRoomId(1);\n    //setRoom(() => roomId);;\n    socket.emit(\"goto\", { name, room, modCode }, (arg, error) => {\n      if (error) {\n        console.log(error);\n        return toast({\n          position: \"top\",\n          title: \"Error\",\n          description: error,\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n      //console.log(\"MODCODE----\", arg );\n      setIsMod(() => arg);\n      history.push(\"/chat\");\n      return toast({\n        position: \"top\",\n        title: \"Hey there\",\n        description: `Welcome to ${room}`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n      });\n    });\n  };\n\n  return (\n    <Flex className=\"login\" flexDirection=\"column\" mb=\"8\">\n      <Heading\n        as=\"h1\"\n        size=\"4xl\"\n        textAlign=\"center\"\n        mb=\"8\"\n        fontFamily=\"DM Sans\"\n        fontWeight=\"600\"\n        letterSpacing=\"-2px\"        \n      >\n        Typepad.xyz\n      </Heading>\n\n      <Flex\n        className=\"form\"\n        gap=\"1rem\"\n        flexDirection={{ base: \"column\", md: \"column\" }}\n        padding=\"20px\"\n      >\n        {\" \"}\n        <Button colorScheme=\"blue\" size=\"lg\" onClick={handleClickJoin}>\n          Join\n        </Button>\n        <div>\n          <Input\n            variant=\"filled\"\n            mt={{ base: \"4\", md: \"4\" }}\n            type=\"text\"\n            placeholder=\"User Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <Input\n            variant=\"filled\"\n            mt={{ base: \"4\", md: \"4\" }}\n            type=\"text\"\n            placeholder=\"Room Name\"\n            value={room}\n            onChange={(e) => setRoom(e.target.value)}\n          />\n          <Input\n            variant=\"filled\"\n            mt={{ base: \"4\", md: \"4\" }}\n            type=\"text\"\n            placeholder=\"Mod Code( For Moderators only)\"\n            value={modCode}\n            onChange={(e) => setModCode(e.target.value)}\n          />\n        </div>\n      </Flex>\n\n      <br></br>\n      <br></br>\n      <br></br>\n\n      <Flex\n        className=\"form\"\n        gap=\"1rem\"\n        flexDirection={{ base: \"column\", md: \"column\" }}\n        padding=\"20px\"\n      >\n        <Button colorScheme=\"blue\" size=\"lg\" onClick={handleClick}>\n          Create\n        </Button>\n        <div>\n          <Input\n            variant=\"filled\"\n            mt={{ base: \"4\", md: \"4\" }}\n            type=\"text\"\n            placeholder=\"User Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <Input\n            variant=\"filled\"\n            mt={{ base: \"4\", md: \"4\" }}\n            type=\"text\"\n            placeholder=\"Set your Mod Code\"\n            value={modCode}\n            onChange={(e) => setModCode(e.target.value)}\n          />\n        </div>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Login;\n","/Users/sethx/chNotes/chat-client/src/mainContext.js",[],"/Users/sethx/chNotes/chat-client/src/components/DefaultPage.js",["42"],"/Users/sethx/chNotes/chat-client/src/usersContext.js",[],"/Users/sethx/chNotes/chat-client/src/socketContext.js",[],"/Users/sethx/chNotes/chat-client/src/index.js",[],["43","44"],{"ruleId":"45","severity":1,"message":"46","line":19,"column":10,"nodeType":"47","messageId":"48","endLine":19,"endColumn":16},{"ruleId":"45","severity":1,"message":"49","line":1,"column":29,"nodeType":"47","messageId":"48","endLine":1,"endColumn":37},{"ruleId":"45","severity":1,"message":"50","line":8,"column":3,"nodeType":"47","messageId":"48","endLine":8,"endColumn":13},{"ruleId":"45","severity":1,"message":"51","line":11,"column":3,"nodeType":"47","messageId":"48","endLine":11,"endColumn":14},{"ruleId":"45","severity":1,"message":"52","line":13,"column":10,"nodeType":"47","messageId":"48","endLine":13,"endColumn":26},{"ruleId":"45","severity":1,"message":"53","line":24,"column":5,"nodeType":"47","messageId":"48","endLine":24,"endColumn":10},{"ruleId":"45","severity":1,"message":"54","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":18},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},"no-unused-vars","'FiList' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'IconButton' is defined but never used.","'ButtonGroup' is defined but never used.","'RiArrowRightLine' is defined but never used.","'isMod' is assigned a value but never used.","'Redirect' is defined but never used.","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-global-assign","no-unsafe-negation"]